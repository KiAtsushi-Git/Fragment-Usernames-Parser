import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time
import telebot

# ==== –ù–ê–°–¢–†–û–ô–ö–ê TELEGRAM ====
TOKEN = ''
CHAT_ID = ''
bot = telebot.TeleBot(TOKEN)

# ==== –§–£–ù–ö–¶–ò–Ø –¶–í–ï–¢–ê ====
def get_color(price):
    try:
        p = int(price)
        if 1 <= p <= 4:
            return "üî¥"
        elif 5 <= p <= 6:
            return "üü°"
        elif 7 <= p <= 10:
            return "üü¢"
    except:
        return "‚ö™Ô∏è"

# ==== –§–£–ù–ö–¶–ò–Ø –ü–ê–†–°–ò–ù–ì–ê –ò –û–¢–ü–†–ê–í–ö–ò ====
def parse_and_notify():
    options = uc.ChromeOptions()
    options.headless = True
    driver = uc.Chrome(options=options)

    try:
        driver.get("https://fragment.com/?sort=price_asc&filter=sale")
        time.sleep(2)

        # –ü–∞—Ä—Å–∏–Ω–≥
        results = []
        try:
            WebDriverWait(driver, 10).until(
                EC.presence_of_element_located((By.CLASS_NAME, "tm-row-selectable"))
            )
            rows = driver.find_elements(By.CLASS_NAME, "tm-row-selectable")
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ –Ω–∞–π–¥–µ–Ω–∞")

            for i, row in enumerate(rows[:10]):
                try:
                    username = row.find_element(By.CLASS_NAME, "tm-value").text.strip()
                    ton_price = row.find_element(By.CLASS_NAME, "icon-ton").text.strip()
                    results.append((username, ton_price))
                except Exception as e:
                    print(f"{i+1}. ‚ùå –ü–∞—Ä—Å–∏–Ω–≥ —Å—Ç—Ä–æ–∫–∏: {e}")
        except:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

        # Telegram —Å–æ–æ–±—â–µ–Ω–∏–µ
        if results:
            message = "üë§ <b>–Æ–∑–µ—Ä–Ω–µ–π–º—ã –Ω–∞ –ø—Ä–æ–¥–∞–∂–µ:</b>\n\n"
            for i, (username, ton_price) in enumerate(results, start=1):
                username_clean = username.replace("@", "")
                link = f"https://fragment.com/username/{username_clean}"
                color = get_color(ton_price)
                message += f'{i}. {username} | <a href="{link}">{ton_price} TON</a> {color}\n'

            bot.send_message(CHAT_ID, message, parse_mode="HTML", disable_web_page_preview=True)
            print("üì¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        else:
            print("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞: {e}")
    finally:
        try:
            driver.quit()
        except:
            pass

# ==== –ê–í–¢–û–ó–ê–ü–£–°–ö ====
print("üîÅ –ü–∞—Ä—Å–µ—Ä –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥.\n")
while True:
    parse_and_notify()
    print("‚è± –ñ–¥—ë–º 10 —Å–µ–∫—É–Ω–¥...\n")
    time.sleep(10)
